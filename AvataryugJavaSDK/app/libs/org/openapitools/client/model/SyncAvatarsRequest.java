/**
 * Client
 * AvatarYug Client side API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SyncAvatarsRequest {
  
  @SerializedName("Platform")
  private String platform = null;
  @SerializedName("Mesh")
  private Boolean mesh = null;

  /**
   * Name of the platform i.e. Android, IOS
   **/
  @ApiModelProperty(required = true, value = "Name of the platform i.e. Android, IOS")
  public String getPlatform() {
    return platform;
  }
  public void setPlatform(String platform) {
    this.platform = platform;
  }

  /**
   * 3D Mesh generation is required or not
   **/
  @ApiModelProperty(required = true, value = "3D Mesh generation is required or not")
  public Boolean getMesh() {
    return mesh;
  }
  public void setMesh(Boolean mesh) {
    this.mesh = mesh;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncAvatarsRequest syncAvatarsRequest = (SyncAvatarsRequest) o;
    return (this.platform == null ? syncAvatarsRequest.platform == null : this.platform.equals(syncAvatarsRequest.platform)) &&
        (this.mesh == null ? syncAvatarsRequest.mesh == null : this.mesh.equals(syncAvatarsRequest.mesh));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.platform == null ? 0: this.platform.hashCode());
    result = 31 * result + (this.mesh == null ? 0: this.mesh.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncAvatarsRequest {\n");
    
    sb.append("  platform: ").append(platform).append("\n");
    sb.append("  mesh: ").append(mesh).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
